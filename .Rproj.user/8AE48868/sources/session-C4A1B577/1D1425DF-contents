---
title: "Example analysis"
author: 
- name: "Tingxi Long" 
date: "2022-12-08"
output: 
  html_document:
    toc: true
    toc_depth: 4
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


```{r}
library(plot.matrix)
```

### Introduction

In this part, I will perform an example data analysis with R with [@tidytuesday; @spotify_songs]. 

Objective: 

-   What is the track popularity of genre by era?
-   What is the loudness of songs in relation to its energy index
-   What is song Duration by Playlist Genre and Era

Link to original data: The datasets for this part of the assignment comes from  [TidyTuesday](https://github.com/rfordatascience/tidytuesday/tree/master/data/2020/2020-01-21).

### Get the data

```{r, message=FALSE}
library(dplyr)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(here)
library(purrr)
```

::: {.callout-note}
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
:::

```{r, message=FALSE}
# Check if the data already exist
if(!dir.exists(here("data"))) { dir.create(here("data")) }

if(!file.exists(here("data","tuesdata_song.RDS"))){
  tuesdata <- tidytuesdayR::tt_load('2020-01-21')
  spotify_songs <- tuesdata$spotify_songs
    
  # save the files to RDS objects
  saveRDS(tuesdata$spotify_songs, file = here("data","tuesdata_song.RDS"))
}
```

Let's load the data
```{r, message=FALSE}
song<- readRDS(here("data","tuesdata_song.RDS"))
```

-   Here is a list of full [data dictionary](https://github.com/rfordatascience/tidytuesday/tree/master/data/2020/2020-01-21#readme) for what all the column names mean. 

### Data wrangling using purrr

```{r}
# 1 demonstrate purrr.
str_dat <- song |> 
  split(song$playlist_genre) |>
  map(.f = ~mean(.x$danceability))
str_dat
```
```{r}
song$temp_ener <- pmap_dbl(song,
                     .f = function(tempo, energy, ...){
                        tempo/energy
                     })
```

```{r}
songs_era <- song %>% 
  mutate(
    track_album_release_date = as.Date(track_album_release_date),
    year = as.numeric(format(track_album_release_date,'%Y')),
    era = case_when(year <= 2000 ~ "-2000",
                    year > 2000 & year <= 2010 ~ "00-10",
                    year > 2010 ~ "+2010"),
    duration_min = duration_ms/60000)
```

## Plots

```{r}
f <- factor(c("2000", "00-10", "2010"), levels = c("2000", "00-10", "2010"))
songs_era %>%
  filter(!is.na(era)) %>%
  group_by(playlist_genre, era) %>%
  ggplot() +
  geom_boxplot(aes(x=fct_inorder(era), track_popularity, fill=era), outlier.size=0) +
  facet_wrap(~playlist_genre,nrow = 3) + 
  labs(x='Era',y="popularity") +
  theme_minimal() +
  theme(legend.position = 'none')+
  labs(title = "Track Popularity by Era and Playlist Genre",
       subtitle = "Data from Spotify", caption = "Tingxi Long",
       x='Era',
       y="popularity")
```
## plot 2

```{r}
fig2 <-song %>%
  ggplot(aes(fill=playlist_genre,x=energy,y=loudness))+
  geom_bar(stat='identity')+ 
  labs(title ="Loudness of songs in relation to its energy index", subtitle = 
         "EDM has the largest loudness", caption = "Tingxi Long")+ylab("Loudness")+xlab("Energy index")
fig2
```

```{r}
# Select category=Asians.
songs_era %>%
  na.omit(era) %>%
  ggplot(aes(x=playlist_genre,y=duration_min)) +
  geom_violin(aes(fill=playlist_genre)) +
  facet_grid(~fct_inorder(era)) +
  theme_minimal() +
  labs(x='Duration (min)') +
  labs(title = "Song Duration by Playlist Genre and Era",
       subtitle = "Data from Spotify", caption = "Tingxi Long",
       x='Duration (min)') +
  theme(legend.position = 'none')
```

## Use Plot.matrix

```{r}
index <- song[,c("danceability","energy","valence","acousticness")]
cindex<-cor(index,use = "complete.obs")
plot(as.assoc(cindex), col=topo.colors, main="My title",
     axis.col=list(side=1, las=1),axis.row=list(side=2, las=1),ann = FALSE)
title(sub = "My subtitle")
```


```{r}
data(air.pvalue)
plot(as.pvalue(air.pvalue),main="p values of airquality",border=NA)
title(sub = "My subtitle")
```

### Summary:

Generally, the songs produced in 2000-2010 has lowest popularity. But we only see a constant decreasing in popularity for rock songs among 3 eras.

EDM songs are more loud regardless of the energy index. 

Generally, the song duration is decreasing by time. But the duration of EDM songs has larger variance during 2000-2010.


``` {.r filename="Functions used in dplyr and tidyr and ggplot"}
dplyr::
  filter
  group_by
  arrange
  mutate
  case_when
stringr::
  string_detect
ggplot:
  geom_boxplot
  geom_bar
  geom_violin
```


